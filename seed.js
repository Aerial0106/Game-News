async function seedDatabase() {
  try {
    // K·∫øt n·ªëi MongoDB (n·∫øu ch∆∞a k·∫øt n·ªëi)
    const mongoose = require('mongoose');
    const User = require('./models/User'); // Import model User
    const Blog = require('./models/Blog'); // Import model Blog
    
    await mongoose.connect('mongodb://localhost:27017/game-news', {
      useNewUrlParser: true,
      useUnifiedTopology: true
    });

    // üîπ T√¨m t·∫•t c·∫£ user trong database
    const savedUsers = await User.find(); // L·∫•y t·∫•t c·∫£ user trong DB

    // Ki·ªÉm tra n·∫øu kh√¥ng c√≥ user n√†o
    if (savedUsers.length < 2) {
      console.error("C·∫ßn √≠t nh·∫•t 2 user trong database ƒë·ªÉ ti·∫øp t·ª•c!");
      return;
    }

    console.log("Danh s√°ch users:", savedUsers);

    // üîπ T·∫°o b√†i vi·∫øt v·ªõi user c√≥ s·∫µn
    const sampleBlogs = [
      {
        title: 'ƒê·∫•u Tr∆∞·ªùng Ch√¢n L√Ω m√πa 14: Th·ª≠ nghi·ªám ƒë·ªôi h√¨nh Twisted Fate Reroll "ƒë·ªôc l·∫°"',
        content1: 'T·ªïng quan ƒë·ªôi h√¨nh Twisted Fate Reroll c·ªßa ƒêTCL m√πa 14. M·ªôt trong nh·ªØng t·ªôc h·ªá kh√° th√∫ v·ªã ·ªü ƒêTCL m√πa 14 ch√≠nh l√† BƒÉng ƒê·∫£ng v·ªõi c∆° ch·∫ø k√≠ch ho·∫°t m·ªôt trang b·ªã mang t√™n Kingpins Hat (M≈© √îng Tr√πm) ƒë·ªÉ tƒÉng s·ª©c m·∫°nh cho t∆∞·ªõng BƒÉng ƒê·∫£ng s·ªü h·ªØu. Trong s·ªë n√†y, Twisted Fate Reroll ƒëang n·ªïi l√™n nh∆∞ m·ªôt l·ªëi ch∆°i kh√° hi·ªáu qu·∫£, khi ch·ªß l·ª±c Twisted Fate c√≥ th·ªÉ ƒë·∫£m b·∫£o s·ª©c m·∫°nh xuy√™n su·ªët v√°n ƒë·∫•u, c√≤n nh·ªØng qu√¢n c·ªù c√≤n l·∫°i c√≥ th·ªÉ k·∫øt h·ª£p c√°c t·ªôc h·ªá kh√°c t·∫°o n√™n m·ªôt ƒë·ªôi h√¨nh kh√° to√†n di·ªán.',
        content2: 'ƒê·∫∑c bi·ªát, ƒë·ªôi h√¨nh n√†y kh√¥ng y√™u c·∫ßu b·∫•t k·ª≥ ·∫•n n√†o c·ªông th√™m ƒë·ªÉ k√≠ch ho·∫°t c√°c m·ªëc c·∫ßn thi·∫øt cho t∆∞·ªõng ch·ªß l·ª±c. ƒê·ªìng th·ªùi, ng∆∞·ªùi ch∆°i c≈©ng ch·ªâ c·∫ßn t·∫≠p trung trang b·ªã cho Darius (th·ªß) v√† Twisted Fate (c√¥ng). Do ƒë√≥, ng∆∞·ªùi ch∆°i c√≥ th·ªÉ tho·∫£i m√°i trong c√°c v√≤ng Ch·ªçn Chung m√† kh√¥ng s·ª£ trang b·ªã c·ªßa m√¨nh b·ªã tranh gi√†nh qu√° nhi·ªÅu.H∆∞·ªõng d·∫´n x√¢y d·ª±ng ƒë·ªôi h√¨nh Twisted Fate Reroll L√† nh·ªØng v·ªã t∆∞·ªõng 1 - 2 v√†ng, ng∆∞·ªùi ch∆°i c√≥ th·ªÉ d·ªÖ d√†ng s·ªü h·ªØu b·ªô ba Darius - Twisted Fate - Shaco ngay t·ª´ nh·ªØng c·∫•p ƒë·ªô ƒë·∫ßu ti√™n. Ch·ªâ c·∫ßn th√™m m·ªôt t∆∞·ªõng ƒê·∫•u Sƒ© l√† ƒë·ªß ƒë·ªÉ ƒë·ªôi h√¨nh n√†y c√≥ th·ªÉ v∆∞·ª£t qua c√°c round ƒë·∫ßu. Th·∫≠m ch√≠, ng∆∞·ªùi ch∆°i c√≥ th·ªÉ roll li√™n t·ª•c, ch·∫•p nh·∫≠n c√°c v√°n thua ƒë·∫ßu tr·∫≠n ƒë·ªÉ c√≥ v·ªã tr√≠ "ƒë·∫πp" cho v√≤ng Ch·ªçn Chung v√† c√≥ ƒë∆∞·ª£c c√°c trang b·ªã nh∆∞ √Ω.',
        content3: 'T·ª´ c·∫•p ƒë·ªô 6, ng∆∞·ªùi ch∆°i c√≥ th·ªÉ b·ªï sung Braum - v·ªã t∆∞·ªõng ch·ªëng ch·ªãu kh√° ch·∫•t l∆∞·ª£ng ƒë·ªÉ b·ªï sung s·ª©c m·∫°nh ph√≤ng th·ªß. V·ªõi vi·ªác TF l√† v·ªã t∆∞·ªõng m·ªèng, l·ªëi ch∆°i xoay quanh qu√¢n c·ªù n√†y c·∫ßn nhi·ªÅu d√†n ch·∫Øn nh·∫•t c√≥ th·ªÉ. Ng∆∞·ªùi ch∆°i c√≥ th·ªÉ l·ª±a ch·ªçn Skarner 2 v√†ng ƒë·ªÉ k√≠ch h·ªá c√πng v·ªõi Braum, v√† Gragas ƒë·ªÉ k√≠ch h·ªá ƒê·∫•u Sƒ© (n·∫øu c√≥). Ngo√†i ra, c√≥ th·ªÉ b·ªï sung th√™m KogMaw ƒë·ªÉ k√≠ch h·ªá Li√™n K√≠ch cho TF.',
        author: savedUsers[1]._id, // L·∫•y _id c·ªßa user th·ª© 2
        category: 'H∆∞·ªõng d·∫´n',
        imageUrl: '/static/img/single-blog/tft.jpg',
        ImageUrl2: '/staticstatic/img/single-blog/tft(2).jpg',
        views: 0,
        comments: [{
          user: savedUsers[0]._id, // L·∫•y _id c·ªßa user th·ª© 1
          text: 'M√πa m·ªõi n√†y h∆°i kh√≥ ch∆°i nha bro!',
          createdAt: new Date()
        }]
      }
    ];

    // üîπ Ch√®n b√†i vi·∫øt v√†o database
    await Blog.insertMany(sampleBlogs);
    console.log('D·ªØ li·ªáu m·∫´u ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng!');

  } catch (error) {
    console.error('L·ªói khi th√™m d·ªØ li·ªáu m·∫´u:', error);
  } finally {
    mongoose.connection.close(); // ƒê√≥ng k·∫øt n·ªëi sau khi xong
  }
}

seedDatabase();
